---
x-nautobot-build: &nautobot-build
  build:
    args:
      NAUTOBOT_VERSION: "${NAUTOBOT_VERSION}"
      PYTHON_VER: "${PYTHON_VER}"
    context: "../"
    target: "nautobot-dev"
    dockerfile: "environments/Dockerfile"
x-nautobot-base: &nautobot-base
  image: "ipfdemo/nautobot-ipfdemo-dev:local"
  env_file:
    - "development.env"
    - "creds.env"
  tty: true

version: "3.8"
services:
  nautobot:
    depends_on:
      - "postgres"
      - "redis"
    <<: *nautobot-build
    <<: *nautobot-base
    volumes:
      - "./nautobot.key:/opt/nautobot/nautobot.key:ro"
      - "./nautobot.crt:/opt/nautobot/nautobot.crt:ro"
  worker:
    entrypoint:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      # - "nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL"  ## $$ because of docker-compose
      - "watchmedo auto-restart --directory './' --pattern '*.py' --recursive -- nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL --events"  ## $$ because of docker-compose
    depends_on:
      - "nautobot"
      - "redis"
    healthcheck:
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3
      test: ["CMD", "bash", "-c", "nautobot-server celery inspect ping --destination celery@$$HOSTNAME"]  ## $$ because of docker-compose
    <<: *nautobot-base
  beat:
    entrypoint:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery beat -l $$NAUTOBOT_LOG_LEVEL"  ## $$ because of docker-compose
    depends_on:
      - "nautobot"
      - "redis"
    healthcheck:
      disable: true
    <<: *nautobot-base
# rq-worker:
#   entrypoint: "nautobot-server rqworker_metrics"
#   depends_on:
#     - "nautobot"
#   healthcheck:
#     disable: true
#   <<: *nautobot-base
